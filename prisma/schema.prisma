// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model UserSettings {
  userId   String @id
  currency String
}

model Category {
  created DateTime @default(now())
  userId  String
  name    String
  type    String   @default("income")
  icon    String

  @@unique([name, userId, type])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  userId      String
  amount      Float
  date        DateTime
  description String?
  type        String
  category    String
  categoryIcon String?
}


model Transcription {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  UpdateAt     DateTime @default(now())
  amount       Float
  description  String
  date         DateTime
  userID       String
  type         String   @default("income")
  categoryIcon String
  category     String
}

model MonthHistory {
  id     Int    @id @default(autoincrement())
  userID String
  year   Int
  month  Int
  day    Int
  income  Float  @default(0)
  expense Float  @default(0)

  // Composite unique constraint (for queries like day_month_year_userId)
  @@unique([userID, year, month, day])
}

model YearHistory {
  id      Int    @id @default(autoincrement())
  userID  String
  year    Int
  month   Int
  income  Float
  expense Float

  // Composite unique constraint (for queries like month_year_userId)
  @@unique([userID, year, month])
}